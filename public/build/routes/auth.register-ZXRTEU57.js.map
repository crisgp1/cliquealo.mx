{
  "version": 3,
  "sources": ["../../../app/routes/auth.register.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/auth.register.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/auth.register.tsx\");\n  import.meta.hot.lastModified = \"1749016370647.697\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, Link, useNavigation } from \"@remix-run/react\";\nimport { UserModel } from \"~/models/User\";\nimport { createUserSession, getUserId } from \"~/lib/session.server\";\nimport { Eye, EyeOff, ArrowRight, Loader2, Check } from 'lucide-react';\nimport { useState } from 'react';\nexport async function loader({\n  request\n}) {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return null;\n}\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  const name = formData.get(\"name\");\n  const email = formData.get(\"email\");\n  const phone = formData.get(\"phone\");\n  const password = formData.get(\"password\");\n  const confirmPassword = formData.get(\"confirmPassword\");\n\n  // Validaciones\n  if (!name || !email || !phone || !password || !confirmPassword) {\n    return json({\n      error: \"Todos los campos son requeridos\"\n    }, {\n      status: 400\n    });\n  }\n  if (name.length < 2) {\n    return json({\n      error: \"El nombre debe tener al menos 2 caracteres\"\n    }, {\n      status: 400\n    });\n  }\n  if (!email.includes('@')) {\n    return json({\n      error: \"Email inv\u00E1lido\"\n    }, {\n      status: 400\n    });\n  }\n\n  // Validaci\u00F3n b\u00E1sica del tel\u00E9fono (solo n\u00FAmeros, espacios, guiones y par\u00E9ntesis)\n  const phoneRegex = /^[\\d\\s\\-\\(\\)\\+]+$/;\n  if (!phoneRegex.test(phone)) {\n    return json({\n      error: \"El n\u00FAmero de tel\u00E9fono solo puede contener n\u00FAmeros, espacios, guiones y par\u00E9ntesis\"\n    }, {\n      status: 400\n    });\n  }\n\n  // Validar que tenga al menos 10 d\u00EDgitos\n  const phoneDigits = phone.replace(/\\D/g, '');\n  if (phoneDigits.length < 10) {\n    return json({\n      error: \"El n\u00FAmero de tel\u00E9fono debe tener al menos 10 d\u00EDgitos\"\n    }, {\n      status: 400\n    });\n  }\n  if (password.length < 6) {\n    return json({\n      error: \"La contrase\u00F1a debe tener al menos 6 caracteres\"\n    }, {\n      status: 400\n    });\n  }\n  if (password !== confirmPassword) {\n    return json({\n      error: \"Las contrase\u00F1as no coinciden\"\n    }, {\n      status: 400\n    });\n  }\n  try {\n    // Verificar si el email ya existe\n    const existingUser = await UserModel.findByEmail(email);\n    if (existingUser) {\n      return json({\n        error: \"Este email ya est\u00E1 registrado\"\n      }, {\n        status: 400\n      });\n    }\n\n    // Crear usuario\n    const user = await UserModel.create({\n      name: name.trim(),\n      email: email.toLowerCase().trim(),\n      phone: phone.trim(),\n      password\n    });\n    return createUserSession(user._id.toString(), \"/\");\n  } catch (error) {\n    console.error(error);\n    return json({\n      error: \"Error interno del servidor\"\n    }, {\n      status: 500\n    });\n  }\n}\nexport default function Register() {\n  _s();\n  const actionData = useActionData();\n  const navigation = useNavigation();\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const isSubmitting = navigation.state === \"submitting\";\n  const passwordRequirements = [{\n    text: \"Al menos 6 caracteres\",\n    met: formData.password.length >= 6\n  }, {\n    text: \"Las contrase\u00F1as coinciden\",\n    met: formData.password === formData.confirmPassword && formData.confirmPassword.length > 0\n  }];\n  const handleInputChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Formatear n\u00FAmero de tel\u00E9fono mientras se escribe\n  const formatPhoneNumber = value => {\n    // Remover todo excepto n\u00FAmeros\n    const phoneNumber = value.replace(/\\D/g, '');\n\n    // Aplicar formato para n\u00FAmeros mexicanos (10 d\u00EDgitos)\n    if (phoneNumber.length <= 3) {\n      return phoneNumber;\n    } else if (phoneNumber.length <= 6) {\n      return `${phoneNumber.slice(0, 3)} ${phoneNumber.slice(3)}`;\n    } else if (phoneNumber.length <= 10) {\n      return `${phoneNumber.slice(0, 3)} ${phoneNumber.slice(3, 6)} ${phoneNumber.slice(6)}`;\n    } else {\n      // Para n\u00FAmeros con c\u00F3digo de pa\u00EDs\n      return `+${phoneNumber.slice(0, 2)} ${phoneNumber.slice(2, 5)} ${phoneNumber.slice(5, 8)} ${phoneNumber.slice(8, 12)}`;\n    }\n  };\n  const handlePhoneChange = value => {\n    const formatted = formatPhoneNumber(value);\n    handleInputChange('phone', formatted);\n  };\n  return <div className=\"min-h-screen bg-white flex\">\n      {/* Left side - Image/Gradient */}\n      <div className=\"hidden lg:block lg:w-1/2 bg-gradient-to-br from-gray-50 to-gray-100\">\n        <div className=\"h-full flex items-center justify-center p-12\">\n          <div className=\"text-center\">\n            <div className=\"w-32 h-32 bg-gray-200 rounded-full mx-auto mb-8\"></div>\n            <h2 className=\"text-2xl font-light text-gray-800 mb-4\">\n              \u00DAnete a nuestra comunidad\n            </h2>\n            <p className=\"text-gray-600 max-w-md\">\n              Publica tus autos, encuentra compradores y realiza transacciones seguras.\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Right side - Form */}\n      <div className=\"flex-1 flex items-center justify-center px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-sm w-full\">\n          <div className=\"text-center mb-12\">\n            <Link to=\"/\" className=\"inline-flex items-center space-x-3 mb-8\">\n              <div className=\"w-8 h-8 bg-black rounded-full\"></div>\n              <span className=\"text-xl font-light tracking-tight text-gray-900\">\n                Cliquealo\n              </span>\n            </Link>\n            \n            <h1 className=\"text-3xl font-light text-gray-900 mb-3\">\n              Crear cuenta\n            </h1>\n            <p className=\"text-gray-600\">\n              Comienza a vender y comprar autos\n            </p>\n          </div>\n\n          <Form method=\"post\" className=\"space-y-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Nombre completo\n              </label>\n              <input type=\"text\" name=\"name\" required autoComplete=\"name\" value={formData.name} onChange={e => handleInputChange('name', e.target.value)} className=\"w-full px-4 py-3 border border-gray-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-gray-900 focus:border-transparent transition-all\" placeholder=\"Tu nombre\" />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Email\n              </label>\n              <input type=\"email\" name=\"email\" required autoComplete=\"email\" value={formData.email} onChange={e => handleInputChange('email', e.target.value)} className=\"w-full px-4 py-3 border border-gray-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-gray-900 focus:border-transparent transition-all\" placeholder=\"tu@email.com\" />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                N\u00FAmero de tel\u00E9fono\n              </label>\n              <input type=\"tel\" name=\"phone\" required autoComplete=\"tel\" value={formData.phone} onChange={e => handlePhoneChange(e.target.value)} className=\"w-full px-4 py-3 border border-gray-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-gray-900 focus:border-transparent transition-all\" placeholder=\"33 1234 5678\" maxLength={15} />\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Formato: 33 1234 5678 o +52 33 1234 5678\n              </p>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Contrase\u00F1a\n              </label>\n              <div className=\"relative\">\n                <input type={showPassword ? \"text\" : \"password\"} name=\"password\" required autoComplete=\"new-password\" value={formData.password} onChange={e => handleInputChange('password', e.target.value)} className=\"w-full px-4 py-3 pr-12 border border-gray-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-gray-900 focus:border-transparent transition-all\" placeholder=\"\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\" />\n                <button type=\"button\" onClick={() => setShowPassword(!showPassword)} className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors\">\n                  {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                </button>\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Confirmar contrase\u00F1a\n              </label>\n              <div className=\"relative\">\n                <input type={showConfirmPassword ? \"text\" : \"password\"} name=\"confirmPassword\" required autoComplete=\"new-password\" value={formData.confirmPassword} onChange={e => handleInputChange('confirmPassword', e.target.value)} className=\"w-full px-4 py-3 pr-12 border border-gray-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-gray-900 focus:border-transparent transition-all\" placeholder=\"\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\" />\n                <button type=\"button\" onClick={() => setShowConfirmPassword(!showConfirmPassword)} className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors\">\n                  {showConfirmPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                </button>\n              </div>\n            </div>\n\n            {/* Password Requirements */}\n            {formData.password && <div className=\"space-y-2\">\n                {passwordRequirements.map((req, index) => <div key={index} className=\"flex items-center space-x-2 text-sm\">\n                    <div className={`w-4 h-4 rounded-full flex items-center justify-center ${req.met ? 'bg-green-100' : 'bg-gray-100'}`}>\n                      {req.met && <Check className=\"w-3 h-3 text-green-600\" />}\n                    </div>\n                    <span className={req.met ? 'text-green-600' : 'text-gray-500'}>\n                      {req.text}\n                    </span>\n                  </div>)}\n              </div>}\n\n            {actionData?.error && <div className=\"p-4 bg-red-50 border border-red-200 rounded-xl\">\n                <p className=\"text-sm text-red-600\">{actionData.error}</p>\n              </div>}\n\n            <button type=\"submit\" disabled={isSubmitting} className=\"w-full bg-gray-900 text-white py-3 rounded-xl hover:bg-gray-800 transition-colors font-medium flex items-center justify-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed\">\n              {isSubmitting ? <Loader2 className=\"w-5 h-5 animate-spin\" /> : <>\n                  <span>Crear cuenta</span>\n                  <ArrowRight className=\"w-4 h-4\" />\n                </>}\n            </button>\n          </Form>\n\n          <div className=\"mt-8 text-center\">\n            <p className=\"text-gray-600\">\n              \u00BFYa tienes cuenta?{\" \"}\n              <Link to=\"/auth/login\" className=\"text-gray-900 hover:text-gray-700 transition-colors font-medium\">\n                Iniciar sesi\u00F3n\n              </Link>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>;\n}\n_s(Register, \"v+zgLfT4kZZCp1eToSxCK5iColY=\", false, function () {\n  return [useActionData, useNavigation];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
